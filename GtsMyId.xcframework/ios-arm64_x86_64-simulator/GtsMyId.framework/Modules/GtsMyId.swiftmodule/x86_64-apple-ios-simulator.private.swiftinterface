// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name GtsMyId
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import CoreImage.CIFilterBuiltins
import Combine
import CoreImage
import CoreVideo
import DeveloperToolsSupport
import Foundation
@_exported import GtsMyId
import Swift
import SwiftUI
import UIKit
import Vision
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public protocol GtsClientDelegate {
  @objc func onCompletion(result: GtsMyId.GtsResult)
  @objc func onFailure(exception: GtsMyId.GtsException)
  @objc func onCancelled()
}
@_inheritsConvenienceInitializers @objc public class GtsConfig : ObjectiveC.NSObject {
  @objc public var locale: GtsMyId.GtsLocale
  @objc public var cameraSelector: GtsMyId.GtsCameraSelector
  @objc public var presentationStyle: GtsMyId.GtsPresentationStyle
  @objc public var appearance: GtsMyId.GtsAppearance?
  @objc override dynamic public init()
  @objc deinit
}
@objc public enum GtsCameraSelector : Swift.Int {
  case Front = 0
  case Back
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class GtsException : ObjectiveC.NSObject {
  @objc public var message: Swift.String?
  @objc public var code: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class GtsResult : ObjectiveC.NSObject {
  @objc public var image: UIKit.UIImage?
  @objc public var faceData: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class GtsClient : ObjectiveC.NSObject {
  @objc public class func start(withConfig config: GtsMyId.GtsConfig, withDelegate delegate: any GtsMyId.GtsClientDelegate)
  @objc public class func run(withConfig config: GtsMyId.GtsConfig, withDelegate delegate: any GtsMyId.GtsClientDelegate) -> UIKit.UIViewController
  @objc override dynamic public init()
  @objc deinit
}
@objc public enum GtsLocale : Swift.Int {
  case Kyrgyz = 0
  case English
  case Russian
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum GtsPresentationStyle : Swift.Int {
  case Full = 0
  case Sheet
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class GtsAppearance : ObjectiveC.NSObject {
  @objc public var primaryColor: UIKit.UIColor?
  @objc public var successColor: UIKit.UIColor?
  @objc public var errorColor: UIKit.UIColor?
  @objc override dynamic public init()
  @objc deinit
}
extension GtsMyId.GtsCameraSelector : Swift.Equatable {}
extension GtsMyId.GtsCameraSelector : Swift.Hashable {}
extension GtsMyId.GtsCameraSelector : Swift.RawRepresentable {}
extension GtsMyId.GtsLocale : Swift.Equatable {}
extension GtsMyId.GtsLocale : Swift.Hashable {}
extension GtsMyId.GtsLocale : Swift.RawRepresentable {}
extension GtsMyId.GtsPresentationStyle : Swift.Equatable {}
extension GtsMyId.GtsPresentationStyle : Swift.Hashable {}
extension GtsMyId.GtsPresentationStyle : Swift.RawRepresentable {}
